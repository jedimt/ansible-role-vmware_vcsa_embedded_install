---
# tasks file for jedimt.vmware_vcsa_embedded_install

# Check for an existing VCSA. If found will skip deployment
- name: Check for existing VCSA
  # ansible.builtin.shell: esxcli vm process list
  ansible.builtin.command: esxcli vm process list
  register: esxi_vms
  changed_when: false
  tags: vcsa_check

- name: Create VCSA deployment script (vSphere 7)
  ansible.builtin.template:
    src: vcsa_template.j2
    dest: "{{ deployment_script_path }}"
    mode: '0755'
  when:
    - "vcsa_name not in esxi_vms.stdout"
    - vsphere_version == "7"
  tags:
    - template
    - vcsa_check

- name: Create VCSA deployment script (vSphere 8)
  ansible.builtin.template:
    src: vcsa_template_vsphere8.j2
    dest: "{{ deployment_script_path }}"
    mode: '0755'
  register: vcsa_script_created
  when:
    - "vcsa_name not in esxi_vms.stdout"
    - vsphere_version == "8"
  tags:
    - template
    - vcsa_check

- name: Mark VCSA deployment script as executable
  ansible.builtin.file:
    dest: "{{ deployment_script_path }}"
    mode: a+x
  when: "vcsa_name not in esxi_vms.stdout"
  tags: template

# Look for the first VMFS-6 datastore that we can deploy the VCSA to
- name: Find available datastore for VCSA deployment
  ansible.builtin.shell: esxcli storage filesystem list | grep VMFS-6 -m 1 | awk '{ print $2 "" }'
  register: vcsa_datastore_target
  when: "vcsa_name not in esxi_vms.stdout"
  changed_when: false
  tags: script_replace

- name: Set variable for VCSA target datastore
  ansible.builtin.set_fact:
    vcsa_datastore_target: '{{ vcsa_datastore_target.stdout }}'
  when: "vcsa_name not in esxi_vms.stdout"
  tags: script_replace

- name: Populate VCSA deployment script with target datastore {{ vcsa_datastore_target }}
  ansible.builtin.lineinfile:
    path: "{{ deployment_script_path }}"
    search_string: 'placeholder'
    line: VCSA_DATASTORE="{{ vcsa_datastore_target }}"
  when: "vcsa_name not in esxi_vms.stdout"
  tags: script_replace

- name: Retrieve VCSA deployment script from ESXi host
  ansible.builtin.fetch:
    src: "{{ deployment_script_path }}"
    dest: "/tmp/vcsa/"
    flat: true
  changed_when: false
  when: "vcsa_name not in esxi_vms.stdout"
  register: file_path

- name: Execute VCSA deployment script
  ansible.builtin.command: "{{ file_path.dest }}"
  when: "vcsa_name not in esxi_vms.stdout"
  connection: local
  changed_when: true
  tags:
    - run_script
    - vm_check

- name: Test connectivity to new VCSA {{ vcsa_name }}
  community.vmware.vmware_about_info:
    hostname: '{{ vcsa_name }}'
    username: '{{ vault_vcenter_username }}'
    password: '{{ vault_vcenter_password }}'
    validate_certs: false
  connection: local
  register: vcenter_about_info
  retries: 20
  delay: 60
  until: vcenter_about_info is success
  tags: facts
